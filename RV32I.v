`define RV32I_X0  5'h00
`define RV32I_X1  5'h01
`define RV32I_X2  5'h02
`define RV32I_X3  5'h03
`define RV32I_X4  5'h04
`define RV32I_X5  5'h05
`define RV32I_X6  5'h06
`define RV32I_X7  5'h07
`define RV32I_X8  5'h08
`define RV32I_X9  5'h09
`define RV32I_X10 5'h0A
`define RV32I_X11 5'h0B
`define RV32I_X12 5'h0C
`define RV32I_X13 5'h0D
`define RV32I_X14 5'h0E
`define RV32I_X15 5'h0F
`define RV32I_X16 5'h10
`define RV32I_X17 5'h11
`define RV32I_X18 5'h12
`define RV32I_X19 5'h13
`define RV32I_X20 5'h14
`define RV32I_X21 5'h15
`define RV32I_X22 5'h16
`define RV32I_X23 5'h17
`define RV32I_X24 5'h18
`define RV32I_X25 5'h19
`define RV32I_X26 5'h1A
`define RV32I_X27 5'h1B
`define RV32I_X28 5'h1C
`define RV32I_X29 5'h1D
`define RV32I_X30 5'h1E
`define RV32I_X31 5'h1F

`define RV32I_ZERO 5'h00
`define RV32I_RA 5'h01
`define RV32I_SP 5'h02
`define RV32I_GP 5'h03
`define RV32I_TP 5'h04
`define RV32I_T0 5'h05
`define RV32I_T1 5'h06
`define RV32I_T2 5'h07
`define RV32I_S0 5'h08
`define RV32I_S1 5'h09
`define RV32I_A0 5'h0A
`define RV32I_A1 5'h0B
`define RV32I_A2 5'h0C
`define RV32I_A3 5'h0D
`define RV32I_A4 5'h0E
`define RV32I_A5 5'h0F
`define RV32I_A6 5'h10
`define RV32I_A7 5'h11
`define RV32I_S2 5'h12
`define RV32I_S3 5'h13
`define RV32I_S4 5'h14
`define RV32I_S5 5'h15
`define RV32I_S6 5'h16
`define RV32I_S7 5'h17
`define RV32I_S8 5'h18
`define RV32I_S9 5'h19
`define RV32I_S10 5'h1A
`define RV32I_S11 5'h1B
`define RV32I_T3 5'h1C
`define RV32I_T4 5'h1D
`define RV32I_T5 5'h1E
`define RV32I_T6 5'h1F

`define INDEX_IMM(VALUE, MAX, MIN) ((VALUE) >> (MIN)) & ((32'h1 << (MAX - MIN + 1)) - 32'h1)
`define INDEX_IMM_BIT(VALUE, BIT) ((VALUE) >> (BIT)) & 32'h1

`define RV32I_LUI(RD, IMM) { `INDEX_IMM(IMM, 31, 12), RD, 7'b0110111 }
`define RV32I_AUIPC(RD, IMM) { `INDEX_IMM(IMM, 31, 12), RD, 7'b0010111 }
`define RV32I_JAL(RD, IMM) { `INDEX_IMM_BIT(IMM, 20), `INDEX_IMM(IMM, 10, 1), `INDEX_IMM_BIT(IMM, 11), `INDEX_IMM(IMM, 19, 12), RD, 7'b1101111 }
`define RV32I_JALR(RD, IMM) { `INDEX_IMM(IMM, 11, 0) rs1 3'b000 RD, 7'b1100111 }
`define RV32I_BEQ(RS1, RS2, IMM)  { `INDEX_IMM_BIT(IMM, 12), `INDEX_IMM(IMM, 10, 5), RS2, RS1, 3'b000, `INDEX_IMM(IMM, 4, 1), `INDEX_IMM_BIT(IMM, 11), 7'b1100011 }
`define RV32I_BNE(RS1, RS2, IMM)  { `INDEX_IMM_BIT(IMM, 12), `INDEX_IMM(IMM, 10, 5), RS2, RS1, 3'b001, `INDEX_IMM(IMM, 4, 1), `INDEX_IMM_BIT(IMM, 11), 7'b1100011 }
`define RV32I_BLT(RS1, RS2, IMM)  { `INDEX_IMM_BIT(IMM, 12), `INDEX_IMM(IMM, 10, 5), RS2, RS1, 3'b100, `INDEX_IMM(IMM, 4, 1), `INDEX_IMM_BIT(IMM, 11), 7'b1100011 }
`define RV32I_BGE(RS1, RS2, IMM)  { `INDEX_IMM_BIT(IMM, 12), `INDEX_IMM(IMM, 10, 5), RS2, RS1, 3'b101, `INDEX_IMM(IMM, 4, 1), `INDEX_IMM_BIT(IMM, 11), 7'b1100011 }
`define RV32I_BLTU(RS1, RS2, IMM) { `INDEX_IMM_BIT(IMM, 12), `INDEX_IMM(IMM, 10, 5), RS2, RS1, 3'b110, `INDEX_IMM(IMM, 4, 1), `INDEX_IMM_BIT(IMM, 11), 7'b1100011 }
`define RV32I_BGEU(RS1, RS2, IMM) { `INDEX_IMM_BIT(IMM, 12), `INDEX_IMM(IMM, 10, 5), RS2, RS1, 3'b111, `INDEX_IMM(IMM, 4, 1), `INDEX_IMM_BIT(IMM, 11), 7'b1100011 }
`define RV32I_LB(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b000, RD, 7'b0000011 }
`define RV32I_LH(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b001, RD, 7'b0000011 }
`define RV32I_LW(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b010, RD, 7'b0000011 }
`define RV32I_LBU(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b100, RD, 7'b0000011 }
`define RV32I_LHU(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b101, RD, 7'b0000011 }
`define RV32I_SB(RS1, RS2, IMM) { `INDEX_IMM(IMM, 11, 5), RS2, RS1, 3'b000, `INDEX_IMM(IMM, 4, 0), 7'b0100011 }
`define RV32I_SH(RS1, RS2, IMM) { `INDEX_IMM(IMM, 11, 5), RS2, RS1, 3'b001, `INDEX_IMM(IMM, 4, 0), 7'b0100011 }
`define RV32I_SW(RS1, RS2, IMM) { `INDEX_IMM(IMM, 11, 5), RS2, RS1, 3'b010, `INDEX_IMM(IMM, 4, 0), 7'b0100011 }
`define RV32I_ADDI(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b000, RD, 7'b0010011 }
`define RV32I_SLTI(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b010, RD, 7'b0010011 }
`define RV32I_SLTIU(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b011, RD, 7'b0010011 }
`define RV32I_XORI(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b100, RD, 7'b0010011 }
`define RV32I_ORI(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b110, RD, 7'b0010011 }
`define RV32I_ANDI(RD, RS1, IMM) { `INDEX_IMM(IMM, 11, 0), RS1, 3'b111, RD, 7'b0010011 }
`define RV32I_SLLI(RD, RS1, AMOUNT) { 7'b0000000, AMOUNT, RS1, 3'b001, RD, 7'b0010011 }
`define RV32I_SRLI(RD, RS1, AMOUNT) { 7'b0000000, AMOUNT, RS1, 3'b101, RD, 7'b0010011 }
`define RV32I_SRAI(RD, RS1, AMOUNT) { 7'b0100000, AMOUNT, RS1, 3'b101, RD, 7'b0010011 }
`define RV32I_ADD(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b000, RD, 7'b0110011 }
`define RV32I_SUB(RD, RS1, RS2) { 7'b0100000, RS2, RS1, 3'b000, RD, 7'b0110011 }
`define RV32I_SLL(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b001, RD, 7'b0110011 }
`define RV32I_SLT(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b010, RD, 7'b0110011 }
`define RV32I_SLTU(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b011, RD, 7'b0110011 }
`define RV32I_XOR(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b100, RD, 7'b0110011 }
`define RV32I_SRL(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b101, RD, 7'b0110011 }
`define RV32I_SRA(RD, RS1, RS2) { 7'b0100000, RS2, RS1, 3'b101, RD, 7'b0110011 }
`define RV32I_OR(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b110, RD, 7'b0110011 }
`define RV32I_AND(RD, RS1, RS2) { 7'b0000000, RS2, RS1, 3'b111, RD, 7'b0110011 }
`define RV32I_FENCE(RD, RS1, SUCC, PRED, FM) { FM, PRED, SUCC, RS1, 3'b000, RD, 7'b0001111 }
`define RV32I_ECALL { 12'b000000000000, 5'b00000, 3'b000, 5'b00000, 7'b1110011 }
`define RV32I_EBREAK { 12'b000000000001, 5'b00000, 3'b000, 5'b00000, 7'b1110011 }

`define RV32I_NOP `RV32I_ADDI(`RV32I_X0, `RV32I_X0, 32'h0)

//`define RV32I_NOP 32'h00000013
`define RV32I_JMP_PREV 32'hFFDFF06F